language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t robutil/uva_solo:latest .
- docker run --name image_test -d -t -p 127.0.0.1:8080:8080 robutil/uva_solo:latest
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs image_test
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker push robutil/uva_solo:latest
env:
  global:
  - secure: bf0+ZC6eeNMDkmlhb3QA6mIXqLeQ9C71/RE9o6C3Kfl6lTrd4W8154dERcwDq5ktiQvW8sWIoV22HtJGG4e80IyYLdjM5vSA4OoFD9EJiA6GrklehMienhOag/5s/hnmQhOu/z7poshZZ1ZT6T+Ks0et1CSnoASfye/8XYmNdozjFR5UtcJi48RZR0OY7cxeVbwcDw33WPuMNwrfpGUzKlzGOsAdliBY4bZnXXQHVrThFP5W5VK935vtMCAbakvs2a55sr853dqzIH5OOC9DfqzVS1joNoHJ3xBSKDQSAgtQyRDtrprD3cwOm94UR/fTb7/2DP82k2bNdLAIjs1wcY/TAzX+DpqrWbjUmhWeyMwNiQpwiwuuBmAwo/cYlOYffHRqacYYh6I6VIOT/n38sslJTBlUuKvT7HfBFCEddQ/SMTjb/sXsrp11gP/uasYL7/zcutEIrNYZNP1sfhhF7sWoH7jkkcc/gV0xSgAzUBkxsuZHsrLYOWmCpoUIYL9k61hb97OXW0epvH9kJ7HS+T8HcrHuEELdFN5Gfz638+THJMAt8DJQGerlnXYCZKzIIBxjnFlXO1Vf3bFOedt3A/AR84fwoPOFOTLPbmZx4nrTDmqoK9dWp+b6jxud6nYz6AYyLJsiKOQ4WGX6g6kwRJMnnmW35RlTrveZw0/TvB0=
  - secure: ixyAOJFlIAYzOoOXyzNzJbIhhXDAg7g/duMRXyt1TB0SyUJMJyq708d98ntE6q/RjBZSySMlUt3mFArJXtM/Q3aPqEbZn91YKWdwxiIXOoPJJWcp6NXVycgABK8JduhBD/S8VAKIEgowSlKmdvbPFyUNYd3k60NE2oWnwb4wE89KZDb+3E36yD0DpM/IEhf99qidLMFbpaqIbG2W+HFUmZ0S70Mktt+91SD0mte+9CKud0oRMmxyUBVxMfcB+3dW3JP0MNPrtnk4DzlME2zBVAExBuNXzLEM5wHkw1wrq3KKcKtmRz7KVx6mkNlyd6ephNzdxyk8+o9wrr1Wepgz+YxeBIvoKxEqC+j5bF2jGhcTx0HDGGiTkSqhajrmpxh30WNFEbVqVc0cJF+gXIDMg3c0LzJQPjsj/Eam3pf0YkSCLGYTNcvEskSJp9Fz4TkMU5yGCY1pqjnuG8QV2EmI1LH8q1JcvC9JxH1x8+q3MraD4pH3Vf17i8V9fhq9mIsv8RX5+olwMXVdQD7bHsGeyTCWxSft6RW6YEmswxSAV94MrlchMertNg0i0prRnDeF3YMBhYNUnIzqzpsvC4anBOuGew5NEJdpfVDlrfEFFBaDW658KdarndBdaUbvvJLWc0ZWrGhPQ0chmO3Br6ZQof7rjUvd1P039rhdbFOAfzA=
